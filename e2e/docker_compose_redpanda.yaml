services:
  # is redpanda: reusing names to not break kafka integration tests
  kafka:
    image: docker.redpanda.com/redpandadata/redpanda:${REDPANDA_VERSION:-v25.2.9}
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:29092,external://0.0.0.0:9092
      - --advertise-kafka-addr internal://kafka:29092,external://localhost:9092
      - --rpc-addr kafka:33145
      - --advertise-rpc-addr kafka:33145
      - --smp 1
      - --memory 1G
      - --mode dev-container
      # - --default-log-level=debug
    ports:
      - "9092:9092"

  connect:
    image: docker.io/apache/kafka:${KAFKA_VERSION:-4.1.0}
    depends_on:
      - kafka
    ports:
      - "8083"
      # - "5005:5005"
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_SESSION_TOKEN: ${AWS_SESSION_TOKEN}
      KAFKA_LOG4J_OPTS: -Dlog4j.configuration=file:/mnt/connect-log4j.properties
      # KAFKA_OPTS: -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    volumes:
      - ${PWD}/e2e:/mnt
      - ${PWD}/target:/opt/connectors/kafka-eventbridge-sink
    command: ["/bin/bash","-c","env && /opt/kafka/bin/connect-standalone.sh /mnt/connect-standalone.properties"]

  localstack:
    image: docker.io/localstack/localstack:4.9.2
    ports:
      - "4566"
